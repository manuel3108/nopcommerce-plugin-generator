import{g as c,D as d,N as m,b as f,c as g,O as p}from"./index-d68648af.js";import{F}from"./File-9e84454c.js";import{F as i}from"./Field-c140c56d.js";import{F as N}from"./FieldAttribute-df44d096.js";import{C,U as l,V as r}from"./ClassBase-992ee473.js";import"./vendor-ba024d67.js";import"./preload-helper-ec9aa979.js";class b extends C{constructor(e,a,t){super("record",e,a,t)}}class x{generate(e){const a="ConfigurationModel",t=["Areas","Admin","Models"];return[new F(a,"cs",t,this.generateContent(e,a,t))]}generateContent(e,a,t){const s=new b(c(e.base.nameSpace,t),a,{addCtor:!1,addRegions:!1});return s.inheritsFrom="BaseNopModel",s.usings.push(new l("Nop.Web.Framework.Mvc.ModelBinding")),s.usings.push(new l("Nop.Web.Framework.Models")),s.addField(new i(r.Public,"ActiveStoreScopeConfiguration",d.Integer,{hasGetterAndSetter:!0,isConstant:!1,isReadonly:!1,additionalNewLine:!0}),!1),e.settings.properties.forEach(n=>{const o=m+e.details.systemName+".Configuration."+n.name;f(o,n.name),s.addField(new i(r.Public,n.name,n.type,{hasGetterAndSetter:!0,isConstant:!1,isReadonly:!1,attribute:new N(g+'("'+o+'")'),additionalNewLine:!1}),!1),s.addField(new i(r.Public,n.name+p,d.Boolean,{hasGetterAndSetter:!0,isConstant:!1,isReadonly:!1,additionalNewLine:!0}),!1)}),s.toString()}}export{x as default};
