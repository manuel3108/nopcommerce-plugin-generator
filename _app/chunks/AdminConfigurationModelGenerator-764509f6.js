import{g as c,D as l,N as m,b as f,c as g,O as p}from"./index-5f5ec556.js";import{F}from"./File-9e84454c.js";import{C as N,U as d,F as i,V as r}from"./Field-a8c2a7c7.js";import{F as w}from"./FieldAttribute-df44d096.js";import"./vendor-3e99503a.js";import"./preload-helper-ec9aa979.js";class C extends N{constructor(e,s,t){super("record",e,s,t)}}class M{generate(e){const s="ConfigurationModel",t=["Areas","Admin","Models"];return new F(s,"cs",t,this.generateContent(e,s,t))}generateContent(e,s,t){const a=new C(c(e.base.nameSpace,t),s,{addCtor:!1,addRegions:!1});return a.inheritsFrom="BaseNopModel",a.usings.push(new d("Nop.Web.Framework.Mvc.ModelBinding")),a.usings.push(new d("Nop.Web.Framework.Models")),a.addField(new i(r.Public,"ActiveStoreScopeConfiguration",l.Integer,{hasGetterAndSetter:!0,isConstant:!1,isReadonly:!1,additionalNewLine:!0}),!1),e.settings.properties.forEach(n=>{const o=m+e.details.systemName+".Configuration."+n.name;f(o,n.name),a.addField(new i(r.Public,n.name,n.type,{hasGetterAndSetter:!0,isConstant:!1,isReadonly:!1,attribute:new w(g+'("'+o+'")'),additionalNewLine:!1}),!1),a.addField(new i(r.Public,n.name+p,l.Boolean,{hasGetterAndSetter:!0,isConstant:!1,isReadonly:!1,additionalNewLine:!0}),!1)}),a.toString()}}export{M as default};
