import{I as $,L as i,F as u}from"./index-4e721ff7.js";function n(r){let t="";for(let s=0;s<r;s++)t+=$;return t}class d{constructor(t,s,e=!1,a=!0,o="Task"){this.visibility=t,this.name=s,this.parameters=[],this.override=e,this.async=a,this.returnType=o,this.expressions=[]}toString(t){return`${n(t)}${this.visibility}${this.override?" override":""}${this.async?" async":""}${this.returnType?" "+this.returnType:""} ${this.name}(${this.parameters.map(s=>s.toString()).join(", ")}) {
${this.expressions.map(s=>`${n(t+1)}${s}`).join(i)}
${n(t)}}`}}class c{constructor(t,s){this.type=t,this.name=s}toString(){return`${this.type} ${this.name}`}}class l{constructor(t){this.name=t}toString(){return`using ${this.name};`}}var h;(function(r){r.Public="public",r.Private="private",r.Protected="protected"})(h||(h={}));class g{constructor(t,s,e=!0,a=!0){this.fields=[],this.namespace=t,this.name=s,this.addRegions=e,this.usings=[],this.methods=[],this.fields=[],a&&(this.myConstructor=new d(h.Public,s,!1,!1,null)),this.usings.push(new l("System"))}addField(t,s=!0){if(this.fields.push(t),s){const e=t.name.replace(u,"");this.myConstructor.parameters.push(new c(t.type,e)),this.myConstructor.expressions.push(`this.${t.name} = ${e};`)}}toString(){const t=1;let s=`${this.usings.map(e=>e.toString()).join(i)}${i}${i}`;return s+=`namespace ${this.namespace} {${i}`,s+=`${n(t)}public class ${this.name} ${this.inheritsFrom?`: ${this.inheritsFrom}`:""} {${i}`,this.addRegions&&(s+=`${i}${n(t+1)}#region Fields${i}${i}`),s+=this.fields.map(e=>e.toString(t+1)).join(i)+i,this.addRegions&&(s+=`${i}${n(t+1)}#endregion${i}`),this.myConstructor&&(this.addRegions&&(s+=`${i}${n(t+1)}#region Ctor${i}${i}`),s+=this.myConstructor.toString(t+1)+i+i,this.addRegions&&(s+=`${n(t+1)}#endregion${i}`)),this.addRegions&&(s+=`${i}${n(t+1)}#region Methods${i}${i}`),s+=this.methods.map(e=>e.toString(t+1)).join(i+i),this.addRegions&&(s+=`${i}${i}${n(t+1)}#endregion${i}`),s+=`${n(t)}}${i}`,s+=`}${i}`,s}}class p{constructor(t,s,e,a){this.visibility=t,this.name=s,this.type=e,this.value=a.value,this.isConstant=a.isConstant,this.isReadonly=a.isReadonly,this.hasGetterAndSetter=a.hasGetterAndSetter}toString(t){return`${n(t)}${this.visibility}${this.isConstant?" const":""}${this.isReadonly?" readonly":""} ${this.type} ${this.name}${this.value?" = "+this.value:""}${this.hasGetterAndSetter?" { get; set; }":";"}`}}export{g as C,p as F,d as M,l as U,h as V};
