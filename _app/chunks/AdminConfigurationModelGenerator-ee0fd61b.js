import{g as u,D as l,N as m,b as f,c as p,O as g}from"./index-c81ccb4a.js";import{F as b}from"./File-9e84454c.js";import{F as n}from"./Field-840620b2.js";import{F}from"./FieldAttribute-df44d096.js";import{C as N,U as d,V as r}from"./ClassBase-a922c7cc.js";import"./vendor-ee3c6b4b.js";import"./preload-helper-ec9aa979.js";class C extends N{constructor(e,a,t){super("record",e,a,t)}}class j{generate(e){const a="ConfigurationModel",t=["Areas","Admin","Models"];return[new b(a,"cs",t,this.generateContent(e,a,t))]}generateContent(e,a,t){const s=new C(u(e.base.nameSpace,t),a,{addCtor:!1,addRegions:!1});return s.inheritsFrom="BaseNopModel",s.usings.push(new d("Nop.Web.Framework.Mvc.ModelBinding")),s.usings.push(new d("Nop.Web.Framework.Models")),s.addField(new n(r.Public,"ActiveStoreScopeConfiguration",l.Integer,{hasGetterAndSetter:!0,isConstant:!1,isReadonly:!1,additionalNewLine:!0,isProperty:!1}),!1),e.settings.properties.forEach(i=>{const o=m+e.details.systemName+".Configuration."+i.name;f(o,i.name),s.addField(new n(r.Public,i.name,i.type,{hasGetterAndSetter:!0,isConstant:!1,isReadonly:!1,attribute:new F(p+'("'+o+'")'),additionalNewLine:!1,isProperty:!1}),!1),s.addField(new n(r.Public,i.name+g,l.Boolean,{hasGetterAndSetter:!0,isConstant:!1,isReadonly:!1,additionalNewLine:!0,isProperty:!1}),!1)}),s.toString()}}export{j as default};
