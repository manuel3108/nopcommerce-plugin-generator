import{C as d}from"./Class-770fa420.js";import{F as l}from"./Field-0b5875f9.js";import{U as r,V as p,M as c,P as o}from"./ClassBase-968f30af.js";import{F as m}from"./File-9e84454c.js";import{g as u,D as f,e as g}from"./index-39154662.js";import"./vendor-70f8720b.js";import"./preload-helper-ec9aa979.js";class v{generate(s){const n="DependencyRegistrar",t=["Infrastructure"];return[new m(n,"cs",t,this.generatesContent(s,n,t))]}generatesContent(s,n,t){const e=new d(u(s.base.nameSpace,t),n,{addCtor:!1,addRegions:!0});e.inheritsFrom="IDependencyRegistrar",e.usings.push(new r("Nop.Core.Infrastructure.DependencyManagement")),e.usings.push(new r("Microsoft.Extensions.DependencyInjection")),e.usings.push(new r("Nop.Core.Infrastructure")),e.usings.push(new r("Nop.Core.Configuration")),e.usings.push(new r(u(s.base.nameSpace,["Services"]))),e.addField(new l(p.Public,"Order",f.Integer,{value:"int.MaxValue",additionalNewLine:!0,hasGetterAndSetter:!1,isConstant:!1,isReadonly:!1,isProperty:!0}),!1);const a=new c(p.Public,"Register",{async:!1,returnType:"void",override:!1});return e.methods.push(a),a.parameters.push(new o("IServiceCollection","services")),a.parameters.push(new o("ITypeFinder","typeFinder")),a.parameters.push(new o("AppSettings","appSettings")),s.services.serviceClasses.forEach(i=>{a.expressions.push(`services.AddScoped<${i.interfaceName||g(i.name)}, ${i.name}>();`)}),e.toString()}}export{v as default};
