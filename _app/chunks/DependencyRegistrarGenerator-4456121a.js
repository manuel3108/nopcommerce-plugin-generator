import{C as d}from"./Class-0e35a17e.js";import{F as l}from"./Field-e4833796.js";import{U as t,V as p,M as c,P as o}from"./ClassBase-1a79e758.js";import{F as u}from"./File-9e84454c.js";import{g as m,D as f,e as g}from"./index-e5b2d387.js";import"./vendor-5e98958b.js";import"./preload-helper-ec9aa979.js";class N{generate(a){const r="DependencyRegistrar",n=["Infrastructure"];return[new u(r,"cs",n,this.generatesContent(a,r,n))]}generatesContent(a,r,n){const e=new d(m(a.base.nameSpace,n),r,{addCtor:!1,addRegions:!1});e.inheritsFrom="IDependencyRegistrar",e.usings.push(new t("Nop.Core.Infrastructure.DependencyManagement")),e.usings.push(new t("Microsoft.Extensions.DependencyInjection")),e.usings.push(new t("Nop.Core.Infrastructure")),e.usings.push(new t("Nop.Core.Configuration")),e.addField(new l(p.Public,"Order",f.Integer,{value:"int.MaxValue",additionalNewLine:!0,hasGetterAndSetter:!1,isConstant:!1,isReadonly:!1,isProperty:!0}),!1);const s=new c(p.Public,"Register",{async:!1,returnType:"void",override:!1});return e.methods.push(s),s.parameters.push(new o("IServiceCollection","services")),s.parameters.push(new o("ITypeFinder","typeFinder")),s.parameters.push(new o("AppSettings","appSettings")),a.services.serviceClasses.forEach(i=>{s.expressions.push(`services.AddScoped<${i.interfaceName||g(i.name)}, ${i.name}>();`)}),e.toString()}}export{N as default};
